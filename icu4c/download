#!/usr/bin/env bash

set -euo pipefail

script_dir="$(dirname "$(readlink -e "${BASH_SOURCE[0]}")")"
common_sh_path="$(readlink -e "$script_dir/../prologue.sh")"
. "$common_sh_path"
unset common_sh_path

PROGRAM_NAME=prerequisites/icu4c/download

function print_usage ()
{
  cat <<'EOF'
Usage: prerequisites/icu4c/download [OPTION]...
Download ICU4C source tree.

  --version=<VERSION>        The version of ICU4C to download (default: the
                             latest release version).
  --source-dir=<DIR>         The source directory (mandatory).
  -h, --help                 Display this help and exit.
EOF
}

if getopt -T; (( $? != 4 )); then
  die_with_runtime_error "$PROGRAM_NAME" "\`getopt' is not an enhanced version."
fi
opts="$(getopt -n "$PROGRAM_NAME" -l version:,source-dir:,help -- h "$@")"
eval set -- "$opts"

while (( $# > 0 )); do
  arg="$1"
  shift
  case "$arg" in
  --version)
    if (( $# == 0 )); then
      die_with_logic_error "$PROGRAM_NAME"
    fi
    version="$1"
    shift
    ;;
  --source-dir)
    if (( $# == 0 )); then
      die_with_logic_error "$PROGRAM_NAME"
    fi
    source_dir="$1"
    shift
    ;;
  -h|--help)
    set +x
    print_usage
    exit 0
    ;;
  --)
    if (( $# > 0 )); then
      die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$1'."
    fi
    break
    ;;
  *)
    die_with_user_error "$PROGRAM_NAME" "An invalid argument \`$arg'."
    ;;
  esac
done

configure_options=()

if [[ ! -v version ]]; then
  version="$(git ls-remote --tags https://github.com/unicode-org/icu.git                \
               | grep -Eo 'refs/tags/release-[[:digit:]]+-[[:digit:]]+(-[[:digit:]]+)?' \
               | grep -Eo '[[:digit:]]+-[[:digit:]]+(-[[:digit:]]+)?'                   \
               | tr - .                                                                 \
               | LANG=C.UTF-8 sort -Vu                                                  \
               | tail -n 1)"                                                            \
    || die_with_runtime_error "$PROGRAM_NAME" "Failed to guess ICU4C latest release version."
  if [[ ! $version =~ ^[[:digit:]]+\.[[:digit:]]+(\.[[:digit:]]+)?$ ]]; then
    die_with_runtime_error "$PROGRAM_NAME" "Failed to guess ICU4C latest release version."
  fi
fi
if [[ ! $version =~ ^[[:digit:]]+\.[[:digit:]]+(\.[[:digit:]]+)?$ ]]; then
  die_with_user_error "$PROGRAM_NAME" "An invalid value \`$version' for \`--version' option."
fi

temp_dir="$(mktemp -d)" \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to create a temporary directory."
push_rollback_command "rm -rf \"$temp_dir\""

url_prefix="https://github.com/unicode-org/icu/releases/download/release-$(tr . - <<<"$version")"
tarball_name="icu4c-$(tr . _ <<<"$version")-src.tgz"

(cd "$temp_dir" && curl -fLsSo "$tarball_name" "$url_prefix/$tarball_name") \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to download \`$tarball_name'."

if [[ ! -v source_dir ]]; then
  die_with_user_error "$PROGRAM_NAME" "\`--source-dir' option is mandatory."
fi
if [[ $(readlink -m "$source_dir") != $(cd "$temp_dir" >/dev/null && readlink -m "$source_dir") ]]; then
  die_with_user_error "$PROGRAM_NAME" "A relative path \`$source_dir' is specified for \`--source-dir' option, but is expected to be an absolute one."
fi

if [[ -e $source_dir ]]; then
  rm -rf "$source_dir"
fi
mkdir -p "$source_dir" \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to create the source directory \`$source_dir'."

tar xf "$temp_dir/$tarball_name" -C "$source_dir" --strip-components=1 \
  || die_with_runtime_error "$PROGRAM_NAME" "Failed to expand \`$tarball_name'."
